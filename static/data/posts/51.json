{
    "id": 51,
    "title": "Convert a C# model into a list of SqlParameters",
    "date": "2022-03-15",
    "image": "",
    "blocks": [
        {
            "blockType": 3,
            "content": "public static List&lt;SqlParameter> ToSqlParameters&lt;T>(this T obj)\n{\n  var result = new List&lt;SqlParameter>();\n  var properties = obj.GetType().GetProperties();\n    \n  properties.ToList().ForEach(propertyInfo => \n  {\n    var column = propertyInfo.GetCustomAttribute&lt;ColumnAttribute>();\n    var notMapped = propertyInfo.GetCustomAttribute&lt;NotMappedAttribute>();\n\n    // see previous post for this method \"IsNullOrDefault\"\n    if (column != null &amp;&amp; notMapped = null &amp;&amp; !propertyInfo.IsNullOrDefault(obj)) \n    {\n      var fieldValue = propertyInfo.GetValue(obj, default);\n      var sqlParam = new SqlParameter($\"@{column.Name}\", fieldValue);\n\n      result.Add(sqlParam);\n    }\n  });\n\n  return result;\n}"
        },
        {
            "blockType": 1,
            "content": "Assumes properties are decorated with [Column(\"column_name\")] attributes."
        }
    ],
    "tags": [
        "c#",
        "sql",
        "code"
    ]
}